modelについて
Railsでは、データモデルとして扱うデフォルトのデータ構造のことをモデル (Model) と呼びます (1.3.3で言うMVCのMのことです)。
Railsでは、データを永続化するデフォルトの解決策として、データベースを使ってデータを長期間保存します。
また、データベースとやりとりをするデフォルトのRailsライブラリはActive Recordと呼ばれます。

マイグレーションについて
generateコマンドの結果のひとつとして、マイグレーションと呼ばれる新しいファイルが生成されます。
マイグレーションは、データベースの構造をインクリメンタルに変更する手段を提供します。

rails console --sandbox コマンドについて
コンソールをサンドボックスで起動すると、そのセッションで行ったデータベースへの変更をコンソールの終了時にすべて “ロールバック” (取り消し) してくれます。

update_attributesメソッドについて
update_attributesメソッドは属性のハッシュを受け取り、
成功時には更新と保存を続けて同時に行います (保存に成功した場合はtrueを返します)。
ただし、検証に1つでも失敗すると、 update_attributesの呼び出しは失敗します。

バリデーションについて
nameとemailにあらゆる文字列を許すのは避けるべきです。これらの属性値には、何らかの制約を与える必要があります。
Active Record では検証 (Validation) という機能を通して、こういった制約を課すことができるようになっています

setupメソッドについて
setupメソッド内に書かれた処理は、各テストが走る直前に実行されます。@userはインスタンス変数ですが、setupメソッド内で宣言しておけば、
すべてのテスト内でこのインスタンス変数が使えるようになります。
したがって、valid?メソッドを使ってUserオブジェクトの有効性をテストすることができます.

dupメソッド
dupは、同じ属性を持つデータを複製するためのメソッドです。

マイグレーション名について
マイグレーション名は自由に指定できますが、次に示すように、末尾をto_usersにしておくことをオススメします。
こうしておくと、usersテーブルにカラムを追加するマイグレーションがRailsによって自動的に作成されるからです。
