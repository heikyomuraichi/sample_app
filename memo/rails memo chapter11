アカウントを有効化する段取りは、ユーザーログイン (8.2)、特にユーザーの記憶 (9.1) と似ています。基本的な手順は次のようになります。2

ユーザーの初期状態は「有効化されていない」(unactivated) にしておく。
ユーザー登録が行われたときに、有効化トークンと、それに対応する有効化ダイジェストを生成する。
有効化ダイジェストはデータベースに保存しておき、有効化トークンはメールアドレスと一緒に、ユーザーに送信する有効化用メールのリンクに仕込んでおく3。
ユーザーがメールのリンクをクリックしたら、アプリケーションはメールアドレスをキーにしてユーザーを探し、データベース内に保存しておいた有効化ダイジェストと比較することでトークンを認証する。
ユーザーを認証できたら、ユーザーのステータスを「有効化されていない」から「有効化済み」(activated) に変更する。

route.rbのresourcesの使い方
 resources :account_activations, only: [:edit]
 →crudをまとめてつくるようの記述方法

AccountActivationのデータモデル
有効化のメールには一意の有効化トークンが必要です。
パッと思いつくのは、送信メールとデータベースのそれぞれに同じ文字列を置いておく方法です。
しかし、この方法では万が一データベースの内容が漏れたとき、多大な被害に繋がってしまいます。
このような事態を防ぐために、パスワードの実装 (第6章) や記憶トークンの実装 (第9章) と同じように仮想的な属性を使ってハッシュ化した文字列をデータベースに保存するようにします。
具体的には、次のように仮想属性の有効化トークンにアクセスし、
user.activation_token
このようなコードでユーザーを認証できるようになります。


