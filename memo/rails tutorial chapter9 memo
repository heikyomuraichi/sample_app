rails turorial chapter9
remember me の方針
Railsのsessionメソッドを使ってユーザーIDを保存しましたが、この情報はブラウザを閉じると消えてしまいます。
本節では、セッションの永続化の第一歩として記憶トークン (remember token) を生成し、
cookiesメソッドによる永続的cookiesの作成や、安全性の高い記憶ダイジェスト (remember digest) によるトークン認証にこの記憶トークンを活用します。

トークンについて
「トークン」とは、パスワードの平文と同じような秘密情報です。
パスワードとトークンとの一般的な違いは、パスワードはユーザーが作成・管理する情報であるのに対し、
トークンはコンピューターが作成・管理する情報である点です。

セッションハイジャックについて
cookiesを永続化するとセッションハイジャックという攻撃を受ける可能性があります。この攻撃は、記憶トークンを奪って、特定のユーザーになりすましてログインするというものです。

永続的セッションの作成方針
記憶トークンにはランダムな文字列を生成して用いる。
ブラウザのcookiesにトークンを保存するときには、有効期限を設定する。
トークンはハッシュ値に変換してからデータベースに保存する。
ブラウザのcookiesに保存するユーザーIDは暗号化しておく。
永続ユーザーIDを含むcookiesを受け取ったら、そのIDでデータベースを検索し、記憶トークンのcookiesがデータベース内のハッシュ値と一致することを確認する。

アクセサーについて
アクセサーを作成すると、そのデータを取り出すメソッド (getter) と、データに代入するメソッド (setter) をそれぞれ定義してくれます。

署名付きcookie
cookieをブラウザに保存する前に安全に暗号化するためのもの
cookies.signed[:user_id] = user.id
ユーザーIDと記憶トークンはペアで扱う必要があるので、cookieも永続化しなくてはなりません。そこで、次のようにsignedとpermanentをメソッドチェーンで繋いで使います。
cookies.permanent.signed[:user_id] = user.id